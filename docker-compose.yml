version: '3.8'

services:
  # Blue Application Instance
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=${PORT:-3000}
    ports:
      - "8081:${PORT:-3000}"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/healthz"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 10s
    networks:
      - app_network
    restart: unless-stopped

  # Green Application Instance
  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=${PORT:-3000}
    ports:
      - "8082:${PORT:-3000}"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/healthz"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 10s
    networks:
      - app_network
    restart: unless-stopped

  # Nginx Configuration Generator
  nginx_config:
    image: alpine:latest
    container_name: nginx_config_generator
    volumes:
      - ./nginx.conf.template:/tmp/nginx.conf.template:ro
      - nginx_config:/etc/nginx
    environment:
      - PORT=${PORT:-3000}
    command: >
      sh -c "
        apk add --no-cache gettext &&
        envsubst '\$$PORT' < /tmp/nginx.conf.template > /etc/nginx/nginx.conf &&
        echo 'Nginx config generated successfully:' &&
        cat /etc/nginx/nginx.conf
      "
    networks:
      - app_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "8080:80"
    volumes:
      - nginx_config:/etc/nginx:ro
    depends_on:
      nginx_config:
        condition: service_completed_successfully
      app_blue:
        condition: service_healthy
      app_green:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 10s
      timeout: 3s
      retries: 3

networks:
  app_network:
    driver: bridge

volumes:
  nginx_config:
    driver: local